name: Webhook Deploy

on:
  push:
    branches: [main]

jobs:
  notify-server:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, zip
        tools: composer:v2
        
    - name: Install Node Dependencies
      run: npm ci
      
    - name: Build Assets
      run: npm run build
      
    - name: Install PHP Dependencies
      run: composer install --no-dev --optimize-autoloader
      
    - name: Create deployment info
      run: |
        echo '{
          "deployment": {
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
            "commit": "'${{ github.sha }}'",
            "branch": "'${{ github.ref_name }}'",
            "repository": "'${{ github.repository }}'",
            "author": "'${{ github.event.head_commit.author.name }}'",
            "message": "'${{ github.event.head_commit.message }}'"
          }
        }' > deployment-info.json
        
    - name: Notify server webhook
      if: secrets.WEBHOOK_URL
      run: |
        curl -X POST "${{ secrets.WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -H "X-GitHub-Event: push" \
          -H "X-Hub-Signature-256: sha256=${{ secrets.WEBHOOK_SECRET }}" \
          -d @deployment-info.json \
          --fail-with-body \
          --show-error
          
    - name: Deploy via SSH (fallback)
      if: secrets.SSH_HOST && !secrets.WEBHOOK_URL
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd ${{ secrets.PROJECT_PATH }}
          git pull origin main
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan migrate --force
          chmod -R 755 storage bootstrap/cache